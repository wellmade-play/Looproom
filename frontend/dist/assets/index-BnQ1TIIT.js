(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const l of a.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function r(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(o){if(o.ep)return;o.ep=!0;const a=r(o);fetch(o.href,a)}})();const M=e=>{if(!e)return;const t=e.trim();if(t)return t.replace(/\/$/,"")},c=e=>{const t=document.querySelector(e);if(!t)throw new Error(`Missing required DOM node: ${e}`);return t},_=(()=>{var t;const e=M(void 0);return e||(typeof window<"u"&&((t=window.location)!=null&&t.origin)?window.location.origin:"http://127.0.0.1:8000")})(),h=(()=>{try{return M(localStorage.getItem("looproom:apiBase"))??_}catch{return _}})(),B=h.endsWith("/api")?h:`${h.replace(/\/$/,"")}/api`,U=h.replace(/\/api$/,""),n={appShell:c("#app"),offlineNotice:document.querySelector("#offlineNotice")??document.body,artistList:c("#artistList"),roomList:c("#roomList"),roomTitle:c("#roomTitle"),roomSubtitle:c("#roomSubtitle"),joinLeaveBtn:c("#joinLeaveBtn"),chatTimeline:c("#chatTimeline"),chatForm:c("#chatForm"),chatInput:c("#chatInput"),sendMessageBtn:c("#sendMessageBtn"),refreshMessagesBtn:c("#refreshMessagesBtn"),spotifyPlayer:c("#spotifyPlayer"),nowPlayingTitle:c("#trackTitle"),nowPlayingArtist:c("#trackArtist"),nowPlayingProgress:c("#trackProgress"),nowPlayingDuration:c("#trackDuration"),nowPlayingArtwork:c("#trackArtwork"),refreshPlaybackBtn:c("#updatePlaybackBtn"),queueList:c("#queueList"),refreshQueueBtn:c("#refreshQueueBtn"),openQueueDialogBtn:c("#openQueueDialog"),recommendationList:c("#recommendationList"),refreshRecommendationsBtn:c("#refreshRecommendationsBtn"),focusModeToggle:c("#focusModeToggle"),roomSearch:c("#roomSearch"),requestDialog:c("#requestDialog"),requestForm:c("#requestForm"),requestTrackUri:c("#requestTrackUri"),requestNote:c("#requestNote")},C={id:"offline-user",spotify_id:"offline",display_name:"Guest Listener",preferences:{}},E=[{id:"offline-room",artistId:"offline-artist",name:"Offline Room",description:"Fallback room when the API is unavailable.",mode:"live",isFeatured:!1,playback_state:null}],N={},D={},F={},s={offline:!1,artists:[],selectedArtistId:null,rooms:[],user:null,currentRoomId:null,membership:new Set,messages:new Map,queue:new Map,recommendations:new Map,playback:{}},x={live:"Live mode",offset:"Offset mode",focus:"Focus mode"},$=e=>{if(!e)return"Unnamed Room";const t=e.trim();return t.length?t:"Unnamed Room"},g=e=>{if(!e||e<0||!Number.isFinite(e))return"00:00";const t=Math.floor(e/1e3),r=Math.floor(t/60),i=t%60;return`${r.toString().padStart(2,"0")}:${i.toString().padStart(2,"0")}`},T=e=>e.replace(/[&<>"']/g,t=>({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"})[t]??t),I=e=>{if(!e){n.spotifyPlayer.innerHTML="",n.spotifyPlayer.hidden=!0;return}const r=(()=>{var l,f,d;if(e.spotifyId)return e.spotifyId;if((l=e.spotifyUri)!=null&&l.startsWith("spotify:track:"))return e.spotifyUri.split(":")[2]??null;if((f=e.uri)!=null&&f.startsWith("spotify:track:"))return e.uri.split(":")[2]??null;const a=(d=e.uri)==null?void 0:d.match(/track\/([A-Za-z0-9]+)/);return a?a[1]:null})(),i=T(e.title);if(r){const a=`https://open.spotify.com/embed/track/${encodeURIComponent(r)}`;n.spotifyPlayer.innerHTML=`
      <iframe
        src="${a}"
        loading="lazy"
        allow="autoplay; clipboard-write; encrypted-media; picture-in-picture"
        title="Spotify playback: ${i}"
      ></iframe>
    `,n.spotifyPlayer.hidden=!1;return}const o=(()=>{var a,l,f;if((a=e.spotifyUri)!=null&&a.startsWith("spotify:track:")){const m=e.spotifyUri.split(":")[2];if(m)return`https://open.spotify.com/track/${m}`}if((l=e.uri)!=null&&l.startsWith("spotify:track:")){const m=e.uri.split(":")[2];if(m)return`https://open.spotify.com/track/${m}`}return(f=e.uri)!=null&&f.startsWith("https://open.spotify.com/track/")?e.uri:null})();if(o){n.spotifyPlayer.innerHTML=`
      <a class="spotify-link" href="${o}" target="_blank" rel="noopener noreferrer">
        Spotify„ÅßÂÜçÁîü
      </a>
    `,n.spotifyPlayer.hidden=!1;return}n.spotifyPlayer.innerHTML='<p class="chat__player-empty">Spotify„ÅßÂÜçÁîü„Åß„Åç„ÇãÊÉÖÂ†±„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</p>',n.spotifyPlayer.hidden=!1},L=(e=s.rooms)=>s.selectedArtistId?e.filter(t=>t.artistId===s.selectedArtistId):e,b=e=>{if(!e.length){s.currentRoomId=null,y();return}(!s.currentRoomId||!e.some(t=>t.id===s.currentRoomId))&&w(e[0].id)},S=e=>{var t,r;if(n.artistList.innerHTML="",!e.length){n.artistList.innerHTML='<p class="empty">No artists available.</p>';return}for(const i of e){const o=document.createElement("button");o.className="list__item",o.type="button",i.id===s.selectedArtistId&&o.classList.add("is-active");const a=Array.isArray((t=i.metadata)==null?void 0:t.genres)?((r=i.metadata)==null?void 0:r.genres).slice(0,2).join(" / "):"Unknown genre";o.innerHTML=`
      <span class="list__item-title">${i.name}</span>
      <span class="list__item-meta">${a}</span>
    `,o.addEventListener("click",()=>j(i.id)),n.artistList.appendChild(o)}},y=()=>{n.roomTitle.textContent="Select a room",n.roomSubtitle.textContent="Choose a room to get started.",n.joinLeaveBtn.disabled=!0,n.chatInput.disabled=!0,n.sendMessageBtn.disabled=!0,n.openQueueDialogBtn.disabled=!0,n.nowPlayingTitle.textContent="Not playing",n.nowPlayingArtist.textContent="-",n.nowPlayingProgress.textContent=g(0),n.nowPlayingDuration.textContent=g(0),n.nowPlayingArtwork.textContent="üéß",I(null)},p=e=>{const t=e??L(s.rooms);if(n.roomList.innerHTML="",!t.length){n.roomList.innerHTML='<p class="empty">No rooms available.</p>',y();return}for(const r of t){const i=document.createElement("button");i.className="list__item",i.type="button",i.dataset.roomId=r.id,r.id===s.currentRoomId&&i.classList.add("is-active");const o=s.artists.find(a=>a.id===r.artistId);i.innerHTML=`
      <span class="list__item-title">${$(r.name)}</span>
      <span class="list__item-meta">
        <span>${o?o.name:"Unknown Artist"}</span>
        <span>Listeners ${r.listeners??"‚Äî"}</span>
        <span>${r.mode}</span>
      </span>
    `,i.addEventListener("click",()=>w(r.id)),n.roomList.appendChild(i)}},v=e=>{var i;const t=s.messages.get(e)??[];if(!t.length){n.chatTimeline.innerHTML='<p class="empty">No messages yet. Start the conversation!</p>';return}const r=((i=s.user)==null?void 0:i.id)??null;n.chatTimeline.innerHTML=t.map(o=>`
        <article class="message${r!==null&&o.userId===r?" message--self":""}" data-id="${o.id}">
          <div class="message__meta">
            <span class="message__author">${H(o.userId)}</span>
            <time datetime="${o.createdAt}">${new Date(o.createdAt).toLocaleTimeString()}</time>
          </div>
          <p class="message__body">${T(o.body)}</p>
        </article>
      `).join("")},R=e=>{const t=s.queue.get(e)??[];if(!t.length){n.queueList.innerHTML='<li class="empty">Queue is empty.</li>';return}n.queueList.innerHTML=t.map(r=>`
        <li class="queue__item" data-id="${r.id}">
          <span>${r.title??"Untitled track"}</span>
          <span>${r.artist??"Unknown artist"}</span>
          <span>#${r.position}</span>
        </li>
      `).join("")},q=e=>{const t=s.recommendations.get(e)??[];if(!t.length){n.recommendationList.innerHTML='<li class="empty">No recommendations yet.</li>';return}n.recommendationList.innerHTML=t.map(r=>`
        <li class="recommendations__item" data-track="${r.trackId}">
          <div class="recommendations__item-head">
            <strong>${r.title??"Untitled track"}</strong>
            <span>${r.artist??"Unknown artist"}</span>
            <span>Score ${r.score.toFixed(2)}</span>
          </div>
        </li>
      `).join("")},H=e=>{var t;return((t=s.user)==null?void 0:t.id)===e?s.user.display_name:"Member"},O=e=>{var a;const t=e.playback_state;if(!t||!t.track){y();return}const r=t.track,i=t.offsetMs??0;n.nowPlayingTitle.textContent=r.title;const o=((a=s.artists.find(l=>l.id===r.artistId))==null?void 0:a.name)??"Unknown Artist";n.nowPlayingArtist.textContent=o,n.nowPlayingProgress.textContent=g(i),n.nowPlayingDuration.textContent=g(r.durationMs),n.nowPlayingArtwork.textContent=o.slice(0,2).toUpperCase()||"üéß",I(r)},P=e=>{var t,r,i;return{...e,listeners:((t=e.playback_state)==null?void 0:t.listeners)??0,now_playing:(r=e.playback_state)!=null&&r.track?{title:e.playback_state.track.title,artist:(i=s.artists.find(o=>{var a,l;return o.id===((l=(a=e.playback_state)==null?void 0:a.track)==null?void 0:l.artistId)}))==null?void 0:i.name,progress_ms:e.playback_state.offsetMs,duration_ms:e.playback_state.track.durationMs}:void 0}},w=e=>{s.currentRoomId=e,n.roomList.querySelectorAll(".list__item").forEach(o=>{o.classList.toggle("is-active",o.dataset.roomId===e)});const t=s.rooms.find(o=>o.id===e);if(!t){y();return}const r=s.artists.find(o=>o.id===t.artistId);n.roomTitle.textContent=$(t.name),n.roomSubtitle.textContent=`${x[t.mode]} ¬∑ ${r?r.name:"Unknown Artist"}`;const i=s.membership.has(e);n.joinLeaveBtn.disabled=!1,n.joinLeaveBtn.textContent=i?"Leave":"Join",n.chatInput.disabled=!i,n.sendMessageBtn.disabled=!i,n.openQueueDialogBtn.disabled=!i,O(t),v(e),R(e),q(e)},j=e=>{s.selectedArtistId=s.selectedArtistId===e?null:e,S(s.artists);const t=L();p(t),b(t)},Q=e=>{const t=e.trim().toLowerCase(),r=L();if(!t){p(r),b(r);return}const i=r.filter(o=>{const a=s.artists.find(l=>l.id===o.artistId);return o.name.toLowerCase().includes(t)||(o.description??"").toLowerCase().includes(t)||((a==null?void 0:a.name)??"").toLowerCase().includes(t)});p(i),b(i)},u=async(e,t={})=>{if(s.offline)throw new Error("offline");const r=e.startsWith("http")?e:`${B}${e}`,{body:i,credentials:o,...a}=t,l=new Headers(a.headers);let f;i!=null&&(typeof i=="string"||i instanceof FormData||i instanceof URLSearchParams||i instanceof Blob||i instanceof ArrayBuffer?f=i:(l.has("Content-Type")||l.set("Content-Type","application/json"),f=JSON.stringify(i)));const d=await fetch(r,{...a,headers:l,body:f,credentials:o??"include"});if(!d.ok){const m=await d.text(),k=new Error(`HTTP ${d.status}: ${m}`);throw k.status=d.status,k.body=m,k}return d.status===204?null:await d.json()},W=async()=>{try{const e=await u("/users/me");s.user=e,s.offline=!1,n.offlineNotice.classList.add("hidden")}catch(e){if(e.status===401)try{const r=await u(`${U}/auth/spotify/login?redirect_uri=${encodeURIComponent(window.location.href)}`);window.location.href=r.auth_url;return}catch(r){console.error("Failed to initiate Spotify login",r)}console.warn("Using fallback user",e),s.offline=!0,n.offlineNotice.classList.remove("hidden"),s.user=C}},z=async()=>{try{const e=await u("/artists");s.offline=!1,n.offlineNotice.classList.add("hidden"),s.artists=e}catch(e){console.warn("Using fallback artists",e),s.offline=!0,n.offlineNotice.classList.remove("hidden"),s.artists=[{id:"offline-artist",name:"Offline Artist",metadata:{},officialFlag:!1}]}S(s.artists)},J=async()=>{try{const e=await u("/rooms");s.offline=!1,n.offlineNotice.classList.add("hidden"),s.rooms=e.map(P)}catch(e){console.warn("Using fallback rooms",e),s.offline=!0,n.offlineNotice.classList.remove("hidden"),s.rooms=E.map(P)}p(),b(L())},G=async()=>{const e=s.currentRoomId;if(!e||!s.user)return;n.joinLeaveBtn.disabled=!0;const t=s.membership.has(e);try{s.offline||(t?await u(`/rooms/${e}/leave`,{method:"POST",body:{user_id:s.user.id}}):await u(`/rooms/${e}/join`,{method:"POST",body:{user_id:s.user.id,role:"member"}})),t?s.membership.delete(e):s.membership.add(e)}catch(r){console.warn("Membership change failed",r)}finally{n.joinLeaveBtn.disabled=!1,p(),w(e)}},K=async e=>{try{const t=await u(`/rooms/${e}/messages?limit=100`);s.messages.set(e,t)}catch(t){console.warn("Message fetch failed",t),s.messages.set(e,N[e]??[])}v(e)},A=async e=>{try{const t=await u(`/rooms/${e}/queue`);s.queue.set(e,t)}catch(t){console.warn("Queue fetch failed",t),s.queue.set(e,D[e]??[])}R(e)},V=async e=>{try{const t=await u(`/rooms/${e}/recommendations`);s.recommendations.set(e,t.items)}catch(t){console.warn("Recommendations fetch failed",t),s.recommendations.set(e,F[e]??[])}q(e)},X=async e=>{e.preventDefault();const t=s.currentRoomId;if(!t||!s.user)return;const r=n.chatInput.value.trim();if(r){n.sendMessageBtn.disabled=!0;try{let i;s.offline?i={id:`offline-${Date.now()}`,roomId:t,userId:s.user.id,body:r,lang:"ja",createdAt:new Date().toISOString()}:i=await u(`/rooms/${t}/messages`,{method:"POST",body:{user_id:s.user.id,body:r,lang:"ja"}});const o=s.messages.get(t)??[];o.push(i),s.messages.set(t,o),v(t),n.chatInput.value=""}catch(i){console.error("Failed to send message",i),alert("Failed to send message. Please check your connection.")}finally{n.sendMessageBtn.disabled=!1}}},Z=async e=>{e.preventDefault();const t=s.currentRoomId;if(!t||!s.user)return;const r=n.requestTrackUri.value.trim(),i=n.requestNote.value.trim();if(!r){alert("Please enter a track URI.");return}try{if(!s.offline)await u(`/rooms/${t}/queue`,{method:"POST",body:{track_id:r,note:i||"User request"}});else{const o=s.queue.get(t)??[];o.push({id:`offline-${Date.now()}`,room_id:t,track_id:r,position:o.length+1,note:i,requested_by_id:s.user.id}),s.queue.set(t,o)}n.requestForm.reset(),n.requestDialog.close(),await A(t)}catch(o){console.error("Failed to request track",o),alert("Unable to add to the queue. Please try again.")}},Y=e=>{const t=e.target.value;Q(t)},ee=()=>{n.joinLeaveBtn.addEventListener("click",()=>void G()),n.refreshMessagesBtn.addEventListener("click",()=>{s.currentRoomId&&K(s.currentRoomId)}),n.chatForm.addEventListener("submit",e=>void X(e)),n.refreshQueueBtn.addEventListener("click",()=>{s.currentRoomId&&A(s.currentRoomId)}),n.refreshRecommendationsBtn.addEventListener("click",()=>{s.currentRoomId&&V(s.currentRoomId)}),n.refreshPlaybackBtn.addEventListener("click",()=>{s.currentRoomId&&y()}),n.openQueueDialogBtn.addEventListener("click",()=>{s.currentRoomId&&n.requestDialog.showModal()}),n.requestForm.addEventListener("submit",e=>void Z(e)),n.requestForm.addEventListener("reset",()=>n.requestDialog.close()),n.focusModeToggle.addEventListener("change",e=>{document.body.classList.toggle("focus-mode",e.target.checked)}),n.roomSearch.addEventListener("input",Y)},te=async()=>{await W(),await z(),await J(),ee(),!s.currentRoomId&&s.rooms.length&&w(s.rooms[0].id)};te().catch(e=>{console.error("Failed to initialise UI",e),alert("Something went wrong. Please refresh and try again.")});
